package {{ .Package }}

import (
	"testing"

	"{{ .Module }}/domain/entities"
	"{{ .Module }}/infrastructure/persistence"
	"github.com/stretchr/testify/assert"
	"gorm.io/driver/sqlite"
	"gorm.io/gorm"
)

func Test{{ .StructName }}_CRUD(t *testing.T) {
	db, _ := gorm.Open(sqlite.Open(":memory:"), &gorm.Config{})
	repo := persistence.NewUserRepositoryGorm(db)

	user := &entities.User{Name: "Test", Email: "test@example.com"}
	err := repo.Create(user)
	assert.NoError(t, err)

	users, err := repo.FindAll()
	assert.NoError(t, err)
	assert.Len(t, users, 1)

	fetched, err := repo.FindByID(user.ID)
	assert.NoError(t, err)
	assert.Equal(t, user.Name, fetched.Name)

	user.Name = "Updated"
	err = repo.Update(user)
	assert.NoError(t, err)

	err = repo.Delete(user.ID)
	assert.NoError(t, err)
}
